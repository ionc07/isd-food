
 create table if not exists role
 (
     id smallserial not null
         constraint role_pkey
             primary key,
     name varchar(30) not null
         constraint role_role_name_key
             unique
 );

 alter table role owner to postgres;

 create table if not exists users
 (
     id serial not null
         constraint users_pkey
             primary key,
     email varchar(50) not null
         constraint users_email_key
             unique,
     first_name varchar(50) not null,
     last_name varchar(50) not null,
     password varchar not null,
     employment_date date not null,
     skype_id varchar not null,
     enabled boolean default true not null,
     notification_enabled boolean default true not null,
     date_to_change date
 );

 alter table users owner to postgres;

 create table if not exists users_roles
 (
     id serial not null
         constraint user_roles_pkey
             primary key,
     user_id integer not null
         constraint user_roles_user_id_fkey
             references users,
     role_id integer not null
         constraint user_roles_role_id_fkey
             references role
 );

 alter table users_roles owner to postgres;

 create table if not exists provider
 (
     id serial not null
         constraint provider_pkey
             primary key,
     delivery_price smallint default 0 not null,
     description varchar(255),
     image varchar,
     name varchar(50) not null,
     contact_info varchar not null,
     active boolean default true
 );

 alter table provider owner to postgres;

 create unique index if not exists provider_contact_info_uindex
     on provider (contact_info);

 create unique index if not exists provider_name_uindex
     on provider (name);

 create unique index if not exists provider_image_uindex
     on provider (image);

 create table if not exists menu
 (
     id serial not null
         constraint menu_pkey
             primary key,
     provider_id integer not null
         constraint menu_provider_id_fkey
             references provider,
     name varchar(40),
     day_of_week smallint not null
         constraint menu_day_of_week_check
             check ((day_of_week >= 1) AND (day_of_week <= 5)),
     image varchar(100)
         constraint menu_image_key
             unique,
     active boolean default true not null
 );

 alter table menu owner to postgres;

 create table if not exists item
 (
     id serial not null
         constraint item_pkey
             primary key,
     name varchar(100) not null
         constraint item_name_key
             unique
 );

 alter table item owner to postgres;

 create table if not exists notification_settings
 (
     id serial not null
         constraint notification_settings_pkey
             primary key,
     user_id integer not null
         constraint notification_settings_user_id_key
             unique
         constraint notification_settings_user_id_fkey
             references users,
     date_to_enable timestamp,
     date_to_disable timestamp,
     enabled boolean default true not null
 );

 alter table notification_settings owner to postgres;

 create table if not exists menu_type
 (
     id serial not null
         constraint menu_type_pk
             primary key,
     menu_id integer not null
         constraint menu_type_menu_id_fk
             references menu,
     type char not null,
     price smallint
 );

 alter table menu_type owner to postgres;

 create table if not exists orders
 (
     id bigserial not null
         constraint orders_pkey
             primary key,
     date date not null,
     user_id integer not null
         constraint orders_user_id_fkey
             references users,
     ordered boolean default false not null,
     menu_type_id integer
         constraint orders_menu_type_id_fk
             references menu_type
 );

 alter table orders owner to postgres;

 create table if not exists menu_type_item
 (
     id serial not null,
     menu_type_id integer not null
         constraint menu_item_type_menu_type_id_fk
             references menu_type,
     item_id integer not null
         constraint menu_item_type_item_id_fk
             references item
 );

 alter table menu_type_item owner to postgres;

 create table if not exists properties
 (
     id varchar(60) not null,
     value varchar(60) not null,
     type varchar(20) default true not null
 );

 alter table properties owner to postgres;

 create unique index if not exists properties_id_uindex
     on properties (id);

 create table if not exists payment
 (
     id bigserial not null
         constraint payment_pk
             primary key,
     date date not null,
     full_name varchar(50) not null,
     payment double precision not null,
     user_id integer not null,
     constraint payment_date_user_id_key
         unique (date, user_id),
     constraint payment_date_user_id_key1
         unique (date, user_id)
 );

 alter table payment owner to postgres;

 create unique index if not exists payment_id_uindex
     on payment (id);

